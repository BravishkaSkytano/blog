name: Deploy Jekyll site to Pages

on:
  push:
    branches: ["master"]
    paths-ignore:
      - ".github/**"
      - "README.md"
      - "LICENSE"
      - "jekyll.yml"
      - ".pages.yml"
  schedule:
    - cron: '0 5 * * 0' # every Monday at 5AM UTC
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  check-for-changes:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.compare.outputs.has_changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # full history needed to compare commits

      - name: Get current commit hash
        id: current
        run: echo "hash=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

      - name: Get last deployed commit from master branch
        id: last
        run: |
          git fetch origin master
          echo "hash=$(git rev-parse origin/master)" >> "$GITHUB_OUTPUT"

      - name: Compare commit hashes
        id: compare
        run: |
          if [ "${{ steps.current.outputs.hash }}" != "${{ steps.last.outputs.hash }}" ]; then
            echo "has_changes=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_changes=false" >> "$GITHUB_OUTPUT"
          fi

  build:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' || needs.check-for-changes.outputs.has_changes == 'true'
    needs: check-for-changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
          cache-version: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' || needs.check-for-changes.outputs.has_changes == 'true'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
